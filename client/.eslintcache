[{"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\index.tsx":"1","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\reportWebVitals.ts":"2","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\App.tsx":"3","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\deboucer.tsx":"4","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\SearchComponent.tsx":"5","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\Player.tsx":"6"},{"size":499,"mtime":1607305157450,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":293,"mtime":1607305725641,"results":"10","hashOfConfig":"8"},{"size":1318,"mtime":1607211979591,"results":"11","hashOfConfig":"8"},{"size":2243,"mtime":1607306279220,"results":"12","hashOfConfig":"8"},{"size":1148,"mtime":1607303451029,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14ibjoz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\index.tsx",[],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\reportWebVitals.ts",[],["29","30"],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\App.tsx",[],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\deboucer.tsx",["31","32"],"import React, { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value: string, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below). \r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\SearchComponent.tsx",["33","34"],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\Player.tsx",["35","36"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Song from '../models/song';\r\nimport { FaPlay, FaPause } from 'react-icons/fa';\r\n\r\nconst useAudio = (url: string): [boolean, () => void] => {\r\n    const [audio, setAudio] = useState(new Audio(url));\r\n    const [playing, setPlaying] = useState(false);\r\n  \r\n    const toggle = () => setPlaying(!playing);\r\n  \r\n    useEffect(() => {\r\n        playing ? audio.play() : audio.pause();\r\n      },\r\n      [playing]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setAudio(new Audio(url))\r\n    }, [url])\r\n  \r\n    useEffect(() => {\r\n      audio.addEventListener('ended', () => setPlaying(false));\r\n      return () => {\r\n        audio.removeEventListener('ended', () => setPlaying(false));\r\n      };\r\n    }, []);\r\n  \r\n    return [playing, toggle];\r\n  };\r\n  \r\n  const Player = (props: any) => {\r\n    const song: Song = props.song;\r\n    const [ playing, toggle ] = useAudio(song.preview_link);\r\n    return (\r\n      <div>\r\n        <button className='player-button' onClick={() => toggle()}>{playing ? <FaPause/> : <FaPlay/>}</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Player;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":29,"column":5,"nodeType":"47","endLine":29,"endColumn":12,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":16,"column":28,"nodeType":"51","messageId":"52","endLine":16,"endColumn":30},{"ruleId":"45","severity":1,"message":"53","line":20,"column":9,"nodeType":"47","endLine":20,"endColumn":26,"suggestions":"54"},{"ruleId":"45","severity":1,"message":"55","line":15,"column":7,"nodeType":"47","endLine":15,"endColumn":16,"suggestions":"56"},{"ruleId":"45","severity":1,"message":"55","line":27,"column":8,"nodeType":"47","endLine":27,"endColumn":10,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.","ArrayExpression",["60"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.",["61"],"React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.",["62"],["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [delay, value]",{"range":"72","text":"73"},"Update the dependencies array to be: [debouncedSearch, searchValue]",{"range":"74","text":"75"},"Update the dependencies array to be: [audio, playing]",{"range":"76","text":"77"},"Update the dependencies array to be: [audio]",{"range":"78","text":"79"},[1273,1280],"[delay, value]",[636,653],"[debouncedSearch, searchValue]",[476,485],"[audio, playing]",[770,772],"[audio]"]