[{"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\index.tsx":"1","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\reportWebVitals.ts":"2","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\App.tsx":"3","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\deboucer.tsx":"4","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\SearchComponent.tsx":"5","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\Player.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":299,"mtime":1607222173744,"results":"10","hashOfConfig":"8"},{"size":1318,"mtime":1607211979591,"results":"11","hashOfConfig":"8"},{"size":1944,"mtime":1607225779045,"results":"12","hashOfConfig":"8"},{"size":1065,"mtime":1607226594556,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14ibjoz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\index.tsx",[],["28","29"],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\reportWebVitals.ts",[],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\App.tsx",[],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\deboucer.tsx",["30","31"],"import React, { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value: string, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below). \r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}","D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\SearchComponent.tsx",["32","33"],"D:\\Coding\\OpenSource\\audio-stream\\client\\src\\components\\Player.tsx",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":29,"column":5,"nodeType":"46","endLine":29,"endColumn":12,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":16,"column":28,"nodeType":"50","messageId":"51","endLine":16,"endColumn":30},{"ruleId":"44","severity":1,"message":"52","line":20,"column":9,"nodeType":"46","endLine":20,"endColumn":26,"suggestions":"53"},{"ruleId":"44","severity":1,"message":"54","line":14,"column":7,"nodeType":"46","endLine":14,"endColumn":16,"suggestions":"55"},{"ruleId":"44","severity":1,"message":"54","line":26,"column":8,"nodeType":"46","endLine":26,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.","ArrayExpression",["59"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.",["60"],"React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [delay, value]",{"range":"71","text":"72"},"Update the dependencies array to be: [debouncedSearch, searchValue]",{"range":"73","text":"74"},"Update the dependencies array to be: [audio, playing]",{"range":"75","text":"76"},"Update the dependencies array to be: [audio]",{"range":"77","text":"78"},[1273,1280],"[delay, value]",[636,653],"[debouncedSearch, searchValue]",[425,434],"[audio, playing]",[719,721],"[audio]"]